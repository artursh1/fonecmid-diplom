
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ТекстУведомленияТГ = "";

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
    
    Оповестить("Запись_ВКМ_ОбслуживаниеКлиента", , Объект.Ссылка); //Оповещение для обновления календаря

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		ОбъектУведомлениеТГ = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		ОбъектУведомлениеТГ.ТекстСообщения = СтрШаблон("Создан документ, дата проведения работ %1, плановое время начала %2, специалист %3", 
			Формат(Объект.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy"), Формат(Объект.ВремяНачалаРаботПлан, "ДФ=HH.mm"), Объект.Специалист);
		
	Иначе
		
		ОбъектУведомлениеТГ = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		ОбъектУведомлениеТГ.ТекстСообщения = СтрШаблон("Изменен документ № %1, дата %2: %3" + ТекстУведомленияТГ, Объект.Номер, Объект.Дата, Символы.ПС);
		
	КонецЕсли;
	
	ОбъектУведомлениеТГ.Записать();
		
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)

	ТекстУведомленияТГ = ТекстУведомленияТГ + " " + СтрШаблон("Изменена дата документа, новая дата %1 %2", Объект.Дата, Символы.ПС);

КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалаРаботПланПриИзменении(Элемент)
	
	ТекстУведомленияТГ = ТекстУведомленияТГ + " " + СтрШаблон("Изменено время начала работ, новое время %1 %2", 
			Формат(Объект.ВремяНачалаРаботПлан, "ДФ=HH.mm"), Символы.ПС);

КонецПроцедуры

&НаКлиенте
Процедура ВремяОкончанияРаботПланПриИзменении(Элемент)
	
	ТекстУведомленияТГ = ТекстУведомленияТГ + " " + СтрШаблон("Изменено время окончания работ, новое время %1 %2", 
			Формат(Объект.ВремяОкончанияРаботПлан, "ДФ=HH.mm"), Символы.ПС);

КонецПроцедуры

&НаКлиенте
Процедура СпециалистПриИзменении(Элемент)
	
	ТекстУведомленияТГ = ТекстУведомленияТГ + " " + СтрШаблон("Изменен специалист, новый специалист %1 %2", 
			Объект.Специалист, Символы.ПС);

КонецПроцедуры

&НаКлиенте
Процедура ДатаПроведенияРаботПриИзменении(Элемент)
	
	ТекстУведомленияТГ = ТекстУведомленияТГ + " " + СтрШаблон("Изменена дата проведения работ, новая дата проведения работ № %1 %2", 
			Объект.ДатаПроведенияРабот, Символы.ПС);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
    
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
    
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()

    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);

КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)

    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);

КонецПроцедуры

#КонецОбласти
