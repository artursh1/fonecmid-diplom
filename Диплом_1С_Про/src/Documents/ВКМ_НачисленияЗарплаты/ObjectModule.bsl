#Область ОбработчикиСобытий


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьДвижения();
	
	РассчитатьОклад();
	
	РассчитатьОтпускные();
	
	РассчитатьУдержания();
	
	СформироватьВзаиморасчеты();
	
КонецПроцедуры

Процедура СформироватьДвижения()
	
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;	
	Запрос = Новый Запрос;
	Запрос.Текст =	"ВЫБРАТЬ
	               |	ВКМ_НачисленияЗарплатыНачисления.Сотрудник КАК Сотрудник,
	               |	ВКМ_НачисленияЗарплатыНачисления.ВидРасчета КАК ВидРасчета,
	               |	ВКМ_НачисленияЗарплатыНачисления.ДатаНачала КАК ПериодДействияНачало,
	               |	ВКМ_НачисленияЗарплатыНачисления.ДатаОкончания КАК ПериодДействияОкончание,
	               |	ВКМ_НачисленияЗарплатыНачисления.ГрафикРаботы КАК ГрафикРаботы,
	               |	МАКСИМУМ(ВКМ_УсловияОплатыСотрудников.Период) КАК Период
	               |ПОМЕСТИТЬ ВТ_ДанныеПоОкладам
	               |ИЗ
	               |	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
	               |		ПО ВКМ_НачисленияЗарплатыНачисления.Сотрудник = ВКМ_УсловияОплатыСотрудников.Сотрудник
	               |			И ВКМ_НачисленияЗарплатыНачисления.ДатаНачала >= ВКМ_УсловияОплатыСотрудников.Период
	               |ГДЕ
	               |	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
	               |	И ВКМ_НачисленияЗарплатыНачисления.ВидРасчета = &Оклад
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВКМ_НачисленияЗарплатыНачисления.Сотрудник,
	               |	ВКМ_НачисленияЗарплатыНачисления.ВидРасчета,
	               |	ВКМ_НачисленияЗарплатыНачисления.ДатаНачала,
	               |	ВКМ_НачисленияЗарплатыНачисления.ДатаОкончания,
	               |	ВКМ_НачисленияЗарплатыНачисления.ГрафикРаботы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеПоОкладам.Сотрудник КАК Сотрудник,
	               |	ВТ_ДанныеПоОкладам.ВидРасчета КАК ВидРасчета,
	               |	ВТ_ДанныеПоОкладам.ПериодДействияНачало КАК ПериодДействияНачало,
	               |	ВТ_ДанныеПоОкладам.ПериодДействияОкончание КАК ПериодДействияОкончание,
	               |	ВТ_ДанныеПоОкладам.ГрафикРаботы КАК ГрафикРаботы,
	               |	ВКМ_УсловияОплатыСотрудников.Оклад КАК Показатель,
	               |	NULL КАК БазовыйПериодНачало,
	               |	NULL КАК БазовыйПериодКонец
	               |ИЗ
	               |	РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
	               |		ПРАВОЕ СОЕДИНЕНИЕ ВТ_ДанныеПоОкладам КАК ВТ_ДанныеПоОкладам
	               |		ПО (ВТ_ДанныеПоОкладам.Сотрудник = ВКМ_УсловияОплатыСотрудников.Сотрудник)
	               |			И (ВТ_ДанныеПоОкладам.Период = ВКМ_УсловияОплатыСотрудников.Период)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВКМ_НачисленияЗарплатыНачисления.Сотрудник,
	               |	ВКМ_НачисленияЗарплатыНачисления.ВидРасчета,
	               |	ВКМ_НачисленияЗарплатыНачисления.ДатаНачала,
	               |	ВКМ_НачисленияЗарплатыНачисления.ДатаОкончания,
	               |	ВКМ_НачисленияЗарплатыНачисления.ГрафикРаботы,
	               |	NULL,
	               |	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВКМ_НачисленияЗарплатыНачисления.ДатаНачала, МЕСЯЦ, -12), МЕСЯЦ),
	               |	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(ВКМ_НачисленияЗарплатыНачисления.ДатаНачала, МЕСЯЦ, -1), МЕСЯЦ)
	               |ИЗ
	               |	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
	               |ГДЕ
	               |	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
				   |	И ВКМ_НачисленияЗарплатыНачисления.ВидРасчета = &Отпуск";
	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад); 
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск); 
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = Выборка.ПериодДействияНачало;
		Движение.ПериодДействияКонец = Выборка.ПериодДействияОкончание;
		Движение.БазовыйПериодНачало = Выборка.БазовыйПериодНачало;
		Движение.БазовыйПериодКонец= Выборка.БазовыйПериодКонец;
		Движение.ВидРасчета = Выборка.ВидРасчета;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.ГрафикРаботы = Выборка.ГрафикРаботы;
		Движение.Показатель = Выборка.Показатель;
		
		Если Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Движение.ПериодДействияНачало, -12));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Движение.БазовыйПериодНачало, 11));
			
		КонецЕсли;
		
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.ПериодДействияНачало = Выборка.ПериодДействияНачало;
		Движение.ПериодДействияКонец = Выборка.ПериодДействияОкончание;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
	КонецЦикла;
			
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

# КонецОбласти

# Область СлужебныеПроцедурыИФункции

 Процедура РассчитатьОклад() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК План,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	|			ВидРасчета = &Оклад
	|				И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";   
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки -1];
		
		Если Выборка.План = 0 Тогда
			ОбщегоНазначения.СообщитьПользователю("Не заполнен график сотрудника");
			Возврат;
		Иначе
			Движение.Сумма = Движение.Показатель * Выборка.Факт / Выборка.План; 
		КонецЕсли;
		
		Движение.ДнейОтработано = Выборка.Факт/8;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьОтпускные()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ДнейОтработано, 0) КАК ДнейОтпуска,
		|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.СуммаБаза, 0) КАК СуммаНачислений12мес,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеБазовыйПериод, 0) КАК ФактДней12мес
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				ВидРасчета = &Отпуск
		|					И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
		|				ВидРасчета = &Отпуск
		|					И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск
		|	И ВКМ_ОсновныеНачисления.Регистратор = &Ссылка";    
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Показатель = Выборка.СуммаНачислений12мес / Выборка.ФактДней12мес;
		СуммаОтпускных = Движение.Показатель * Выборка.ДнейОтпуска; 
		Движение.Сумма = СуммаОтпускных;

		// Сторно записи
		Если Движение.Сторно Тогда
			Движение.ДнейОтработано = - Движение.ДнейОтработано;
			Движение.Сумма = - Движение.Сумма;
			
		КонецЕсли; 
		
	КонецЦикла;
		
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьУдержания() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	               |	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.Сумма, 0) КАК НДФЛ,
	               |	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.СуммаБаза КАК СуммаБаза
	               |ИЗ
	               |	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(
	               |			&Измерение,
	               |			&Измерение,
	               |			,
	               |			ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_Удержания.НДФЛ)
	               |				И Регистратор = &Регистратор) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Измерение = Новый Массив;
	Измерение.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерение", Измерение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Запись = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		Запись.Сумма =(Выборка.СуммаБаза * 13) / 100;
		
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать(, Истина);
	
КонецПроцедуры

Процедура СформироватьВзаиморасчеты() 
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисления.Сумма, 0) КАК Сумма
	               |ПОМЕСТИТЬ ВТ_Начисления
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	               |ГДЕ
	               |	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВКМ_ДополнительныеНачисления.Сотрудник,
	               |	ЕСТЬNULL(ВКМ_ДополнительныеНачисления.Сумма, 0)
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	               |ГДЕ
	               |	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Начисления.Сотрудник КАК Сотрудник,
	               |	СУММА(ВТ_Начисления.Сумма) КАК Сумма
	               |ПОМЕСТИТЬ ВТ_ГРуппировка
	               |ИЗ
	               |	ВТ_Начисления КАК ВТ_Начисления
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Начисления.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ГРуппировка.Сотрудник КАК Сотрудник,
	               |	ВТ_ГРуппировка.Сумма КАК Сумма,
	               |	СУММА(ВКМ_Удержания.Сумма) КАК НДФЛ
	               |ИЗ
	               |	ВТ_ГРуппировка КАК ВТ_ГРуппировка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	               |		ПО ВТ_ГРуппировка.Сотрудник = ВКМ_Удержания.Сотрудник
	               |ГДЕ
	               |	ВКМ_Удержания.Регистратор = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ГРуппировка.Сотрудник,
	               |	ВТ_ГРуппировка.Сумма";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.Сумма - Выборка.НДФЛ;
		
	КонецЦикла;	
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();	
	
	
КонецПроцедуры



#КонецОбласти

