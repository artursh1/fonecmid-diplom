// @strict-types


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		ДвижениеОстатки = Движения.ОстаткиТоваров.Добавить();
		ДвижениеОстатки.ВидДвижения = ВидДвиженияНакопления.Расход;
		ДвижениеОстатки.Период = Дата;
		ДвижениеОстатки.Контрагент = Контрагент;
		ДвижениеОстатки.Номенклатура = ТекСтрокаТовары.Номенклатура;
		ДвижениеОстатки.Сумма = ТекСтрокаТовары.Сумма;
		ДвижениеОстатки.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьАвтозаполнение() Экспорт; // Автозаполнение таблицы значений Услуги
	
	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	
	Если НоменклатураАбонентскаяПлата = Неопределено Или НоменклатураАбонентскаяПлата.Пустая()
		Или НоменклатураРаботыСпециалиста = Неопределено Или НоменклатураРаботыСпециалиста.Пустая() Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Проверьте заполнение констант НоменклатураАбонентскаяПлата и НоменклатураРаботыСпециалиста";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
				
		Возврат;
	
	КонецЕсли;
	
	ДокументОбъект = Ссылка.ПолучитьОбъект();
	ДокументОбъект.Услуги.Очистить();
		
	СуммаАбонентскойПлаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СуммаАбонентскойПлаты");
	
	Если СуммаАбонентскойПлаты <> 0 Тогда
		
		НоваяСтрока = ДокументОбъект.Услуги.Добавить();
		НоваяСтрока.Номенклатура = НоменклатураАбонентскаяПлата;
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Цена = СуммаАбонентскойПлаты;
		НоваяСтрока.Сумма = СуммаАбонентскойПлаты;
		
	КонецЕсли;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовПриход,
		|	ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеПриход
		|ИЗ
		|	РегистрНакопления.ВыполненныеКлиентуРаботы.Обороты(&НачалоПериода, &КонецПериода,, Договор.Ссылка = &Ссылка) КАК
		|		ВыполненныеКлиентуРаботыОбороты";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
	
КонецПроцедуры

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
